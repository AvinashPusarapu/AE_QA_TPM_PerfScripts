<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Move Out in Group Reg" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">172.16.35.200</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="Accept-Encoding" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate</stringProp>
            </elementProp>
            <elementProp name="Accept-Language" elementType="Header">
              <stringProp name="Header.name">Accept-Language</stringProp>
              <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
            </elementProp>
            <elementProp name="Connection" elementType="Header">
              <stringProp name="Header.name">Connection</stringProp>
              <stringProp name="Header.value">keep-alive</stringProp>
            </elementProp>
            <elementProp name="Content-Length" elementType="Header">
              <stringProp name="Header.name">Content-Length</stringProp>
              <stringProp name="Header.value">72</stringProp>
            </elementProp>
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="X-ClientTimeZone" elementType="Header">
              <stringProp name="Header.name">X-ClientTimeZone</stringProp>
              <stringProp name="Header.value">Asia/Calcutta</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;Alert1234&quot;,&quot;captcha&quot;:&quot;&quot;,&quot;appLogin&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/auth/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Access_Token" enabled="true">
          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
          <stringProp name="RegexExtractor.refname">access_token</stringProp>
          <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
          <stringProp name="RegexExtractor.template">$1$</stringProp>
          <stringProp name="RegexExtractor.default">access_token.notfound</stringProp>
          <stringProp name="RegexExtractor.match_number">1</stringProp>
          <stringProp name="Sample.scope">all</stringProp>
        </RegexExtractor>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">${__setProperty(access_token, ${access_token})};
${__setProperty(refresh_token, ${refresh_token})};</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Group Reg" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Postman-Token</stringProp>
              <stringProp name="Header.value">a35f355e-1aed-4bc8-bebc-4728e6b87e26</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate, br</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Visitor Picking" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;filterQueryValue&quot;:&quot;&quot;,&quot;filterCriteria&quot;:[{&quot;fieldName&quot;:&quot;intStatus&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;value&quot;:0}],&quot;page&quot;:${__threadNum},&quot;start&quot;:0,&quot;size&quot;:30,&quot;sortByString&quot;:&quot;[{\&quot;property\&quot;:\&quot;createdOn\&quot;,\&quot;direction\&quot;:\&quot;DESC\&quot;}]&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.16.35.200</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/tpmadmin/visitors/find?</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">createdOn--&gt;changedOn</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visitorId_0;visitorId_1;visitorId_2;visitorId_3;visitorId_4;visitorId_5;visitorId_6;visitorId_7;visitorId_8;visitorId_9;visitorId_10;visitorId_11;visitorId_12;visitorId_13;visitorId_14;visitorId_15;visitorId_16;visitorId_17;visitorId_18;visitorId_19;visitorId_20;visitorId_21;visitorId_22;visitorId_23;visitorId_24;visitorId_25;visitorId_26;visitorId_27;visitorId_28;visitorId_29</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].id;$.data[1].id;$.data[2].id;$.data[3].id;$.data[4].id;$.data[5].id;$.data[6].id;$.data[7].id;$.data[8].id;$.data[9].id;$.data[10].id;$.data[11].id;$.data[12].id;$.data[13].id;$.data[14].id;$.data[15].id;$.data[16].id;$.data[17].id;$.data[18].id;$.data[19].id;$.data[20].id;$.data[21].id;$.data[22].id;$.data[23].id;$.data[24].id;$.data[25].id;$.data[26].id;$.data[27].id;$.data[28].id;$.data[29].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import org.apache.commons.io.FileUtils

def response = prev.getResponseDataAsString()

JsonSlurper slurper = new JsonSlurper()
def json = slurper.parseText(response)

def visitorId_0 = json.data[0].id

visitorId_0.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Chevrondemo\\Group Reg + Check-in\\visitorId.csv&quot;), it + &apos;,&apos;,true) }</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">new File(&apos;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Chevrondemo\\Group Reg + Check-in\\visitorId.csv&apos;) &lt;&lt; vars.get(&apos;PARAM_1&apos;) &lt;&lt; &apos;,&apos; &lt;&lt; vars.get(&apos;PARAM_2&apos;) &lt;&lt; System.getProperty(&apos;line.separator&apos;)</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">vars.put(&quot;index&quot;,&quot;${__Random(00000,99999,)}&quot;);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Group Visit Creation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;${__property(visitid)}&quot;,&quot;type&quot;:&quot;Visit_Registration&quot;,&quot;visitStartDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,,,)}T${__timeShift(HH:mm:ss,,,,)}-0000&quot;,&quot;visitTypeCode&quot;:&quot;group&quot;,&quot;visitEndDate&quot;:&quot;${__timeShift(yyyy-MM-dd,,P1D,,)}T23:59:59-0000&quot;,&quot;locationId&quot;:3708142253396921,&quot;visitHosts&quot;:[{&quot;hostId&quot;:3674039878685469,&quot;visitId&quot;:&quot;${__property(visitid)}&quot;}],&quot;visitorsVisits&quot;:[{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_0},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_1},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_2},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_3},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_4},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_5},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_6},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_7},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_8},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_9},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_10},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_11},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_12},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_13},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_14},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_15},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_16},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_17},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_18},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_19},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_20},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_21},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_22},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_23},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_24},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_25},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_26},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_27},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_28},&quot;visitStatus&quot;:60},{&quot;visitId&quot;:&quot;${__property(visitid)}&quot;,&quot;visitorId&quot;:${visitorId_29},&quot;visitStatus&quot;:60}],&quot;groupName&quot;:&quot;Balayya${__RandomString(3,1234567890,)}&quot;,&quot;visitRecurrenceStartDateTime&quot;:&quot;${__timeShift(yyyy-MM-dd,,P1D,,)}T${__timeShift(HH:mm:ss,,,,)}-0000&quot;,&quot;visitRecurrenceEndTimeForDay&quot;:&quot;${__timeShift(yyyy-MM-dd,,P1D,,)}T23:59:59-0000&quot;,&quot;visitRecurrenceEndDateTimeForPattern&quot;:&quot;${__timeShift(yyyy-MM-dd,,P1D,,)}T23:59:59-0000&quot;,&quot;recurringTypeId&quot;:1,&quot;isAllDayEvent&quot;:true,&quot;visitRecurrencePattern&quot;:[],&quot;customProperties&quot;:{&quot;VisitHours&quot;:&quot;dayonly&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">172.16.35.200</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/tpmadmin/visit/save?_dc=1649833938276</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="visitorsVisits" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">visitorsVisits_0;visitorsVisits_1;visitorsVisits_2;visitorsVisits_3;visitorsVisits_4;visitorsVisits_5;visitorsVisits_6;visitorsVisits_7;visitorsVisits_8;visitorsVisits_9;visitorsVisits_10;visitorsVisits_11;visitorsVisits_12;visitorsVisits_13;visitorsVisits_14;visitorsVisits_15;visitorsVisits_16;visitorsVisits_17;visitorsVisits_18;visitorsVisits_19;visitorsVisits_20;visitorsVisits_21;visitorsVisits_22;visitorsVisits_23;visitorsVisits_24;visitorsVisits_25;visitorsVisits_26;visitorsVisits_27;visitorsVisits_28;visitorsVisits_29</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].visitorsVisits[0].id;$.data[0].visitorsVisits[1].id;$.data[0].visitorsVisits[2].id;$.data[0].visitorsVisits[3].id;$.data[0].visitorsVisits[4].id;$.data[0].visitorsVisits[5].id;$.data[0].visitorsVisits[6].id;$.data[0].visitorsVisits[7].id;$.data[0].visitorsVisits[8].id;$.data[0].visitorsVisits[9].id;$.data[0].visitorsVisits[10].id;$.data[0].visitorsVisits[11].id;$.data[0].visitorsVisits[12].id;$.data[0].visitorsVisits[13].id;$.data[0].visitorsVisits[14].id;$.data[0].visitorsVisits[15].id;$.data[0].visitorsVisits[16].id;$.data[0].visitorsVisits[17].id;$.data[0].visitorsVisits[18].id;$.data[0].visitorsVisits[19].id;$.data[0].visitorsVisits[20].id;$.data[0].visitorsVisits[21].id;$.data[0].visitorsVisits[22].id;$.data[0].visitorsVisits[23].id;$.data[0].visitorsVisits[24].id;$.data[0].visitorsVisits[25].id;$.data[0].visitorsVisits[26].id;$.data[0].visitorsVisits[27].id;$.data[0].visitorsVisits[28].id;$.data[0].visitorsVisits[29].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="TestPlan.comments"> </stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import groovy.json.JsonSlurper
import org.apache.commons.io.FileUtils

def response = prev.getResponseDataAsString()

JsonSlurper slurper = new JsonSlurper()
def json = slurper.parseText(response)

def visitorsVisits_0 = json.data[0].visitorsVisits[0].id
def visitorsVisits_1 = json.data[0].visitorsVisits[1].id
def visitorsVisits_2 = json.data[0].visitorsVisits[2].id
def visitorsVisits_3 = json.data[0].visitorsVisits[3].id
def visitorsVisits_4 = json.data[0].visitorsVisits[4].id
def visitorsVisits_5 = json.data[0].visitorsVisits[5].id
def visitorsVisits_6 = json.data[0].visitorsVisits[6].id
def visitorsVisits_7 = json.data[0].visitorsVisits[7].id
def visitorsVisits_8 = json.data[0].visitorsVisits[8].id
def visitorsVisits_9 = json.data[0].visitorsVisits[9].id
def visitorsVisits_10 = json.data[0].visitorsVisits[10].id
def visitorsVisits_11 = json.data[0].visitorsVisits[11].id
def visitorsVisits_12 = json.data[0].visitorsVisits[12].id
def visitorsVisits_13 = json.data[0].visitorsVisits[13].id
def visitorsVisits_14 = json.data[0].visitorsVisits[14].id
def visitorsVisits_15 = json.data[0].visitorsVisits[15].id
def visitorsVisits_16 = json.data[0].visitorsVisits[16].id
def visitorsVisits_17 = json.data[0].visitorsVisits[17].id
def visitorsVisits_18 = json.data[0].visitorsVisits[18].id
def visitorsVisits_19 = json.data[0].visitorsVisits[19].id
def visitorsVisits_20 = json.data[0].visitorsVisits[20].id
def visitorsVisits_21 = json.data[0].visitorsVisits[21].id
def visitorsVisits_22 = json.data[0].visitorsVisits[22].id
def visitorsVisits_23 = json.data[0].visitorsVisits[23].id
def visitorsVisits_24 = json.data[0].visitorsVisits[24].id
def visitorsVisits_25 = json.data[0].visitorsVisits[25].id
def visitorsVisits_26 = json.data[0].visitorsVisits[26].id
def visitorsVisits_27 = json.data[0].visitorsVisits[27].id
def visitorsVisits_28 = json.data[0].visitorsVisits[28].id
def visitorsVisits_29 = json.data[0].visitorsVisits[29].id

[visitorsVisits_0].each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_1.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_2.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_3.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_4.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_5.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_6.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_7.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_8.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_9.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_10.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_11.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_12.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_13.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_14.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_15.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_16.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_17.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_18.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_19.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_20.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_21.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_22.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_23.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_24.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_25.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_26.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_27.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_28.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }

visitorsVisits_29.each{ FileUtils.writeStringToFile(new File(&quot;C:\\Users\\pusarapu.avinash\\Desktop\\AE\\Non-Admin\\Re-test\\Group Registration\\visitorsVisitsId.csv&quot;), it + System.getProperty(&quot;line.separator&quot;), true) }</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="visitorId" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">visitorId_0;visitorId_1;visitorId_2;visitorId_3;visitorId_4;visitorId_5;visitorId_6;visitorId_7;visitorId_8;visitorId_9;visitorId_10;visitorId_11;visitorId_12;visitorId_13;visitorId_14;visitorId_15;visitorId_16;visitorId_17;visitorId_18;visitorId_19;visitorId_20;visitorId_21;visitorId_22;visitorId_23;visitorId_24;visitorId_25;visitorId_26;visitorId_27;visitorId_28;visitorId_29</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].visitorsVisits[0].visitorId;$.data[0].visitorsVisits[1].visitorId;$.data[0].visitorsVisits[2].visitorId;$.data[0].visitorsVisits[3].visitorId;$.data[0].visitorsVisits[4].visitorId;$.data[0].visitorsVisits[5].visitorId;$.data[0].visitorsVisits[6].visitorId;$.data[0].visitorsVisits[7].visitorId;$.data[0].visitorsVisits[8].visitorId;$.data[0].visitorsVisits[9].visitorId;$.data[0].visitorsVisits[10].visitorId;$.data[0].visitorsVisits[11].visitorId;$.data[0].visitorsVisits[12].visitorId;$.data[0].visitorsVisits[13].visitorId;$.data[0].visitorsVisits[14].visitorId;$.data[0].visitorsVisits[15].visitorId;$.data[0].visitorsVisits[16].visitorId;$.data[0].visitorsVisits[17].visitorId;$.data[0].visitorsVisits[18].visitorId;$.data[0].visitorsVisits[19].visitorId;$.data[0].visitorsVisits[20].visitorId;$.data[0].visitorsVisits[21].visitorId;$.data[0].visitorsVisits[22].visitorId;$.data[0].visitorsVisits[23].visitorId;$.data[0].visitorsVisits[24].visitorId;$.data[0].visitorsVisits[25].visitorId;$.data[0].visitorsVisits[26].visitorId;$.data[0].visitorsVisits[27].visitorId;$.data[0].visitorsVisits[28].visitorId;$.data[0].visitorsVisits[29].visitorId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="TestPlan.comments"> </stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA;NA</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="visitId" enabled="false">
            <stringProp name="TestPlan.comments">3763495533589146</stringProp>
            <stringProp name="JSONPostProcessor.referenceNames">visitId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[0].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">visitId_ Not Found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Move Out" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">25</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${__property(access_token)}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Postman-Token</stringProp>
              <stringProp name="Header.value">a35f355e-1aed-4bc8-bebc-4728e6b87e26</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept-Encoding</stringProp>
              <stringProp name="Header.value">gzip, deflate, br</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move Out from Group" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;filterCriteria&quot;:[{&quot;fieldName&quot;:&quot;visitorId&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;value&quot;:&quot;${visitorId}&quot;},{&quot;fieldName&quot;:&quot;visitId&quot;,&quot;operator&quot;:&quot;=&quot;,&quot;value&quot;:&quot;${visitId}&quot;}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/tpmadmin/visit/moveout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\pusarapu.avinash\Desktop\AE\Chevrondemo\Group Reg Move Out\25U\Results.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\pusarapu.avinash\Desktop\AE\Chevrondemo\Group Reg Move Out\25U\Aggregate.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="filename">C:/Users/pusarapu.avinash/Desktop/AE/Chevrondemo/Group Reg Move Out/Id&apos;s.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">visitorId,visitId</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
